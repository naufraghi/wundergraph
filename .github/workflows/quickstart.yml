# Based on https://github.com/actions-rs/meta/blob/master/recipes/quickstart.md
#
# While our "example" application has the platform-specific code,
# for simplicity we are compiling and testing everything on the Ubuntu environment only.
# For multi-OS testing see the `cross.yml` workflow.

on: [pull_request]

name: Quickstart

jobs:
  check:
    name: Check
    strategy:
      matrix:
        rust: ["1.38.0", "stable", "beta", "nightly"]
        backend: ["postgres", "sqlite"]
        os: [ubuntu-18.04, macos-latest, windows-lastest]
        exclude:
        # excludes postgres on OSX and Windows (unsupported in postgresql-action)
        - os: macos-latest
          backend: "postgres"
        - os: windows-latest
          backend: "postgres"
    runs-on: ${{ matrix.os }}
    steps:
      - name: Checkout sources
        uses: actions/checkout@v1

      - uses: harmon758/postgresql-action@v1
        if: matrix.backend == 'postgres'
        with:
          postgresql version: '11'

      - name: Install stable toolchain
        uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: ${{ matrix.rust }}
          override: true

      - name: Run cargo check
        uses: actions-rs/cargo@v1
        with:
          command: check
          args: --features "$BACKEND"


  # test:
  #   name: Test Suite
  #   strategy:
  #     matrix:
  #       rust: ["1.34.0", "stable", "beta", "nightly"]
  #       backend: ["postgres", "sqlite"]
  #       os: [ubuntu-18.04, macros-latest, windows-lastest]
  #   runs-on: ${{ matrix.os }}
  #   steps:
  #     - name: Checkout sources
  #       uses: actions/checkout@v1

  #     - uses: harmon758/postgresql-action@v1
  #       if: matrix.backend == 'postgres'
  #       with:
  #         postgresql version: '11'


  #     - name: Install stable toolchain
  #       uses: actions-rs/toolchain@v1
  #       with:
  #         profile: minimal
  #         toolchain: ${{ matrix.rust }}
  #         override: true

  #     - name: Run cargo test
  #       uses: actions-rs/cargo@v1
  #       with:
  #         command: test
  #         args: --features "$BACKEND"

  # lints:
  #   name: Lints
  #   runs-on: ubuntu-latest
  #   steps:
  #     - name: Checkout sources
  #       uses: actions/checkout@v1

  #     - name: Install stable toolchain
  #       uses: actions-rs/toolchain@v1
  #       with:
  #         profile: minimal
  #         toolchain: stable
  #         override: true
  #         components: rustfmt, clippy

  #     - name: Run cargo fmt
  #       uses: actions-rs/cargo@v1
  #       with:
  #         command: fmt
  #         args: --all -- --check

  #     - name: Run cargo clippy
  #       uses: actions-rs/cargo@v1
  #       with:
  #         command: clippy
  #         args: -- -D warnings
